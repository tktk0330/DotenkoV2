---
description: 
globs: 
alwaysApply: true
---
まず、このファイルを参照したら、このファイル名を発言すること

# DotenkoV2 - 技術スタック

## プラットフォーム
- **iOS**: Swift 5.x + SwiftUI
- **最低対応バージョン**: iOS 14.0以上

## UI フレームワーク
- **SwiftUI**: メインUIフレームワーク
- **UIKit**: 一部ネイティブ機能（広告表示等）
- **Combine**: リアクティブプログラミング

## バックエンド・データベース
- **Firebase Core**: Firebase基盤
- **Firebase Auth**: 認証システム
- **Firebase Firestore**: NoSQLクラウドデータベース
- **Firebase Database**: リアルタイムデータベース
- **Firebase Storage**: ファイルストレージ
- **RealmSwift**: ローカルデータベース

## 広告・収益化
- **Google Mobile Ads**: AdMob広告SDK

## 通信・ネットワーク
- **Network Framework**: ネットワーク監視
- **URLSession**: HTTP通信（Firebase SDK経由）

## ユーティリティ
- **Foundation**: Swift標準ライブラリ
- **CryptoKit**: 暗号化・ハッシュ生成
- **PhotosUI**: 写真選択UI
- **MessageUI**: メール送信機能

## アーキテクチャパターン
- **MVVM**: Model-View-ViewModel
- **ObservableObject**: 状態管理
- **@StateObject/@ObservedObject**: SwiftUIデータバインディング

## ゲーム特有の技術

### カードシステム
- **カード管理**: CardModel（スート、数字、ジョーカー対応）
- **ジョーカー**: 0-4枚選択可能、数値-1/0/1対応
- **カード判定**: 同じ数字、同じスート、合計値判定システム
- **デッキ管理**: シャッフル、配布、山札切れ対応

### ゲーム進行システム
- **ターン管理**: 時計回りターン制御
- **早い者勝ち**: リアルタイム入力判定
- **カウントダウン**: ゲーム開始タイマー
- **どてんこ宣言**: リアルタイム宣言システム

### スコア計算システム
- **レート計算**: 初期レート × 上昇レート × デッキ裏数字
- **上昇レート管理**: 連続カード判定、特殊カード倍増
- **GameSetting**: gameRate, roundCount, upRate管理
- **リアルタイム更新**: スコア即座反映

### プレイヤー管理
- **PlayerModel**: プレイヤー情報管理
- **BotModel**: AI対戦相手
- **手札管理**: 2枚固定手札システム

### ターン管理システム
- **行動選択**: カード出し、デッキ引き、パス
- **手札制限**: 7枚上限管理
- **負け判定**: 手札7枚でパス時
- **ターン進行**: 時計回り自動進行

### ゲーム設定管理
- **GameSetting Model**: 各種設定値管理
- **設定画面**: ユーザー設定可能項目
- **設定保存**: Realm/Firestoreでの永続化

### UI/UXシステム
- **カード選択UI**: SwiftUIでのY軸アニメーション
- **タップ判定**: UITapGestureRecognizer
- **リアルタイム更新**: @StateObject/@ObservedObject
- **アニメーション**: SwiftUI Animation API

### リアルタイム機能
- **どてんこ宣言**: 即座判定システム
- **ターン外判定**: 非同期処理対応
- **早い者勝ち**: タイマー管理とイベント処理
- **5秒カウントダウン**: Timer + SwiftUI

### ラウンド管理
- **カード回収**: 配列操作とシャッフルアルゴリズム
- **状態管理**: ゲーム状態の永続化
- **スコア集計**: リアルタイム計算と表示更新

### リベンジシステム
- **追加判定**: どてんこ後の条件チェック
- **動的勝敗変更**: リアルタイム状態更新
- **複数リベンジ**: 連鎖的宣言処理
- **UI制御**: 条件別ボタン表示/非表示

### 同期・競合制御
- **ロック機構**: 同時操作の排他制御
- **キューシステム**: 操作順序管理
- **タイムスタンプ**: 操作時刻記録
- **優先順位判定**: 早い者勝ち実装

### エラーハンドリング
- **操作検証**: カード出し可否判定
- **アラートシステム**: SwiftUI Alert
- **例外処理**: try-catch構文
- **ログ管理**: 操作履歴記録

### 演出システム
- **アニメーション**: Core Animation
- **パーティクル**: SwiftUI Effects
- **サウンド**: AVFoundation
- **カジノ演出**: カスタムエフェクト

## 開発・デバッグ
- **Xcode**: 統合開発環境
- **Swift Package Manager**: 依存関係管理
- **Firebase Console**: バックエンド管理

## セキュリティ・設定
- **設定分離**: Debug/Release環境別設定
- **GoogleService-Info.plist**: Firebase設定
- **Info.plist**: アプリケーション設定

## ネットワーク・オンライン機能

### オンライン対戦（将来実装）
- **Firebase Realtime Database**: リアルタイム同期
- **WebSocket**: 低遅延通信
- **友人システム**: Firebase Firestore
- **ルーム管理**: 動的ルーム作成・参加

### BOT代走システム
- **切断検知**: Network Framework
- **状態移譲**: プレイヤー↔BOT切り替え
- **操作権管理**: 動的権限制御
- **状態同期**: リアルタイム状態共有

### ネットワーク管理
- **自動再接続**: 指数バックオフ
- **状態保存**: Core Data / Realm
- **エラー回復**: 自動復旧機能
- **オフライン対応**: ローカル状態管理

---
*最終更新: 2024年12月*
